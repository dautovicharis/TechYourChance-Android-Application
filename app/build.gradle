import com.android.build.gradle.internal.tasks.FinalizeBundleTask

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 34
    defaultConfig {
        applicationId "com.techyourchance.android"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode 1
        versionName "0.1"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            def projectPropsFile = rootProject.file("release.properties")
            if (projectPropsFile.exists()) {
                Properties props = new Properties()
                props.load(new FileInputStream(projectPropsFile))

                storeFile file(props['KEYSTORE_FILE'])
                storePassword props['STORE_PASSWORD']
                keyAlias props['KEY_ALIAS']
                keyPassword props['KEY_PASSWORD']
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        
        applicationVariants.all { variant ->

            def artifactName = "tyc-${variant.name}-${variant.versionCode}-v${variant.versionName}"

            def buildTypeSuffix = variant.name.toLowerCase().contains("debug") ? " Debug" : ""
            mergedFlavor.manifestPlaceholders = [appName: "TechYourChance${buildTypeSuffix}"]

            // Rename APKs
            variant.outputs.all {
                outputFileName = "${artifactName}.apk"
            }

            // Rename AABs
            tasks.named("sign${variant.name.capitalize()}Bundle", FinalizeBundleTask) {
                File file = finalBundleFile.asFile.get()
                File finalFile = new File(file.parentFile, "${artifactName}.aab")
                finalBundleFile.set(finalFile)
            }
        }

    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // Dependency injection
    implementation "com.google.dagger:dagger:2.45"
    kapt "com.google.dagger:dagger-compiler:2.45"

    // Fragment navigation
    implementation 'com.ncapdevi:frag-nav:3.3.0'

    // Dialogs
    implementation 'com.techyourchance:dialoghelper:1.0.1'

    // Image loading
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    // Networking
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'

    // Event bus
    implementation 'org.greenrobot:eventbus:3.2.0'

    // Settings (shared pref)
    implementation 'com.techyourchance:settingshelper:1.1.0'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // biometric auth
    implementation "androidx.biometric:biometric-ktx:1.2.0-alpha05"

    // Background work
    implementation "androidx.work:work-runtime-ktx:2.8.1"

}
